CREATE TABLE IF NOT EXISTS users (
	id INT NOT NULL AUTO_INCREMENT UNIQUE,
	username VARCHAR(255),
	pfp_path VARCHAR(255),
	PRIMARY KEY(id)
);


CREATE TABLE IF NOT EXISTS passwords (
	user_id INT NOT NULL,
	hash VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS libraries (
	id INT NOT NULL AUTO_INCREMENT UNIQUE,
	name VARCHAR(255) NOT NULL,
	owner INT NOT NULL,
	color VARCHAR(7),
	cover_path VARCHAR(255),
	PRIMARY KEY(id)
);


CREATE TABLE IF NOT EXISTS filerefs (
	id INT NOT NULL AUTO_INCREMENT UNIQUE,
    name VARCHAR(255),
	path VARCHAR(255),
	PRIMARY KEY(id)
);


CREATE TABLE IF NOT EXISTS library_contents (
	lib_id INT NOT NULL,
	file_id INT NOT NULL
);


CREATE TABLE IF NOT EXISTS permissions (
	lib_id INT NOT NULL,
	user_id INT NOT NULL,
	status BOOLEAN
);


ALTER TABLE passwords
ADD FOREIGN KEY(user_id) REFERENCES users(id)
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE libraries
ADD FOREIGN KEY(owner) REFERENCES users(id)
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE library_contents
ADD FOREIGN KEY(lib_id) REFERENCES libraries(id)
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE library_contents
ADD FOREIGN KEY(file_id) REFERENCES filerefs(id)
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE permissions
ADD FOREIGN KEY(user_id) REFERENCES users(id)
ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE permissions
ADD FOREIGN KEY(lib_id) REFERENCES libraries(id)
ON UPDATE NO ACTION ON DELETE CASCADE;